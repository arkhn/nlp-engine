name: pagai

on: [push]

jobs:
  lint:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - run: |
          python -m pip install --upgrade pip
          pip install flake8
      - run: |
          flake8 pagai --config=./.flake8 --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 pagai --config=./.flake8 --count --max-complexity=10 --max-line-length=100 --statistics

  build:
    needs: lint
    runs-on: ubuntu-18.04

    outputs:
      tags: ${{ steps.metadata.outputs.tags }}

    steps:
      - id: metadata
        run: |
          IMAGE=arkhn/pagai
          # Always tag with first 8 of sha
          TAGS="${IMAGE}:${GITHUB_SHA::8}"

          # Has this workflow been triggered by a tag?
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}

            # Is the tag on master and does it follow numeric versioning?
            if [[ "${{ github.event.base_ref }}" == refs/heads/master ]] && [[ "${VERSION}" =~ ^v[0-9]{1,3}(\.[0-9]{1,3}(\.[0-9]{1,3})?)?$ ]]; then
              TAGS="${TAGS},${IMAGE}:latest"
              VERSION="${VERSION#v}"
            fi

          # Has this workflow been triggered by a branch?
          elif [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          fi

          if [[ ! -z "${VERSION}" ]]; then
            TAGS="${TAGS},${IMAGE}:${VERSION}"
          fi

          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            VERSION_NAME=${{ steps.metadata.outputs.version }}
            VERSION_SHA=${GITHUB_SHA::8}
          platforms: linux/amd64
          outputs: type=docker,dest=image
          tags: ${{ steps.metadata.outputs.tags }}
          labels: |
            com.arkhn.image.title=pagai
            com.arkhn.image.description=${{ github.event.repository.description }}
            com.arkhn.image.url=${{ github.event.repository.html_url }}
            com.arkhn.image.source=${{ github.event.repository.clone_url }}
            com.arkhn.image.version=${{ steps.metadata.outputs.version }}
            com.arkhn.image.created=${{ steps.metadata.outputs.created }}
            com.arkhn.image.revision=${{ github.sha }}
            com.arkhn.image.licenses=${{ github.event.repository.license.spdx_id }}
      - uses: actions/upload-artifact@v2
        with:
          name: image
          path: image

  build-oracle11:
    needs: lint
    runs-on: ubuntu-18.04

    outputs:
      tags: ${{ steps.metadata.outputs.tags }}

    steps:
      - id: metadata
        run: |
          IMAGE=mammouth.arkhn.com/arkhn/pagai-oracle11
          # Always tag with first 8 of sha
          TAGS="${IMAGE}:${GITHUB_SHA::8}"

          # Has this workflow been triggered by a tag?
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}

            # Is the tag on master and does it follow numeric versioning?
            if [[ "${{ github.event.base_ref }}" == refs/heads/master ]] && [[ "${VERSION}" =~ ^v[0-9]{1,3}(\.[0-9]{1,3}(\.[0-9]{1,3})?)?$ ]]; then
              TAGS="${TAGS},${IMAGE}:latest"
              VERSION="${VERSION#v}"
            fi

          # Has this workflow been triggered by a branch?
          elif [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          fi

          if [[ ! -z "${VERSION}" ]]; then
            TAGS="${TAGS},${IMAGE}:${VERSION}"
          fi

          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        name: login to arkhn registry
        with:
          registry: mammouth.arkhn.com
          username: ${{ secrets.ARKHN_DOCKER_LOGIN }}
          password: ${{ secrets.ARKHN_DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.oracle11
          build-args: |
            VERSION_NAME=${{ steps.metadata.outputs.version }}
            VERSION_SHA=${GITHUB_SHA::8}
          platforms: linux/amd64
          outputs: type=docker,dest=image
          tags: ${{ steps.metadata.outputs.tags }}
          labels: |
            com.arkhn.image.title=pagai
            com.arkhn.image.description=${{ github.event.repository.description }}
            com.arkhn.image.url=${{ github.event.repository.html_url }}
            com.arkhn.image.source=${{ github.event.repository.clone_url }}
            com.arkhn.image.version=${{ steps.metadata.outputs.version }}
            com.arkhn.image.created=${{ steps.metadata.outputs.created }}
            com.arkhn.image.revision=${{ github.sha }}
            com.arkhn.image.licenses=${{ github.event.repository.license.spdx_id }}
      - uses: actions/upload-artifact@v2
        with:
          name: image-oracle11
          path: image

  tests:
    needs: build
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: image
      - run: docker load -i image
      - id: tests
        env:
          TEST_ORACLE_HOST: ${{ secrets.TEST_ORACLE_HOST }}
          TEST_ORACLE_PORT: ${{ secrets.TEST_ORACLE_PORT }}
          TEST_ORACLE_DB: ${{ secrets.TEST_ORACLE_DB }}
          TEST_ORACLE_LOGIN: ${{ secrets.TEST_ORACLE_LOGIN }}
          TEST_ORACLE_PASSWORD: ${{ secrets.TEST_ORACLE_PASSWORD }}
          TEST_MSSQL_HOST: ${{ secrets.TEST_MSSQL_HOST }}
          TEST_MSSQL_PORT: ${{ secrets.TEST_MSSQL_PORT }}
          TEST_MSSQL_DB: ${{ secrets.TEST_MSSQL_DB }}
          TEST_MSSQL_LOGIN: ${{ secrets.TEST_MSSQL_LOGIN }}
          TEST_MSSQL_PASSWORD: ${{ secrets.TEST_MSSQL_PASSWORD }}
        run: |
          docker-compose -f ./docker-compose.test.yml up -d
          docker-compose -f ./docker-compose.test.yml exec -T pagai pytest -svv

  publish:
    needs: [tests, build]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: image
      - run: |
          docker load -i image
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - run: |
          TAGS=${{ needs.build.outputs.tags }}
          for tag in ${TAGS//,/ }; do
            docker push "${tag}"
          done

  publish-oracle11:
    needs: [tests, build-oracle11]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: image-oracle11
      - run: |
          docker load -i image
      - uses: docker/login-action@v1
        name: login to arkhn registry
        with:
          registry: mammouth.arkhn.com
          username: ${{ secrets.ARKHN_DOCKER_LOGIN }}
          password: ${{ secrets.ARKHN_DOCKER_PASSWORD }}
      - run: |
          TAGS=${{ needs.build-oracle11.outputs.tags }}
          for tag in ${TAGS//,/ }; do
            docker push "${tag}"
          done
