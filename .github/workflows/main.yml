name: pagai

on: [push]

jobs:
  lint:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - run: |
          python -m pip install --upgrade pip
          pip install flake8
      - run: |
          flake8 pagai --config=./.flake8 --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 pagai --config=./.flake8 --count --max-complexity=10 --max-line-length=100 --statistics

  build-and-publish:
    runs-on: ubuntu-18.04
    needs: lint
    steps:
      - id: docker_meta
        name: Docker meta
        uses: crazy-max/ghaction-docker-meta@v1
        # compute tags:
        # - always tag with a short commit SHA : (arkhn/image:sha-${GITHUB_SHA::7})
        # - always tag with the branch same (replacing '/' with '-')
        # - when a tag follows semver (eg: v1.2.3), tag with 'latest' and '1.2.3'
        with:
          images: arkhn/pagai
          tag-sha: true
          tag-semver: |
            {{version}}
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          build-args: |
            VERSION_NAME=${{ steps.docker_meta.outputs.version }}
            VERSION_SHA=${GITHUB_SHA::8}
          platforms: linux/amd64
          # always push images to the hub
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
  
  tests:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1
        name: login to arkhn registry
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - id: tests
        env:
          TEST_ORACLE_HOST: ${{ secrets.TEST_ORACLE_HOST }}
          TEST_ORACLE_PORT: ${{ secrets.TEST_ORACLE_PORT }}
          TEST_ORACLE_DB: ${{ secrets.TEST_ORACLE_DB }}
          TEST_ORACLE_LOGIN: ${{ secrets.TEST_ORACLE_LOGIN }}
          TEST_ORACLE_PASSWORD: ${{ secrets.TEST_ORACLE_PASSWORD }}
          TEST_MSSQL_HOST: ${{ secrets.TEST_MSSQL_HOST }}
          TEST_MSSQL_PORT: ${{ secrets.TEST_MSSQL_PORT }}
          TEST_MSSQL_DB: ${{ secrets.TEST_MSSQL_DB }}
          TEST_MSSQL_LOGIN: ${{ secrets.TEST_MSSQL_LOGIN }}
          TEST_MSSQL_PASSWORD: ${{ secrets.TEST_MSSQL_PASSWORD }}
        run: |
          docker-compose -f ./docker-compose.test.yml up -d
          docker-compose -f ./docker-compose.test.yml exec -T pagai pytest -svv
